local modules = peripheral.find("neuralInterface")
if not modules then
    error("Must have a neural interface", 0)
end

-- We require an entity sensor to find mobs and a laser to shoot at them. We error if neither exists.
if not modules.hasModule("plethora:laser") then error("Cannot find laser", 0) end
if not modules.hasModule("plethora:sensor") then error("Cannot find entity sensor", 0) end

-- Overlay glasses
local glasses = modules.getPeripheral("plethora:glasses")
if not glasses then error("Cannot find overlay glasses", 0) end

local canvas = glasses.canvas()
if not canvas then error("Cannot initialize canvas", 0) end

-- UI elements
local buttons = {}
local trackedEntities = {"Creeper", "Skeleton", "Zombie"}
local currentPage = 1
local itemsPerPage = 3

local function clearButtons()
    for i, button in ipairs(buttons) do
        button.remove()
    end
    buttons = {}
end

local function createButton(x, y, text, color, onClick)
    local button = canvas.addText({x, y}, text)
    button.setColor(color[1], color[2], color[3])
    button.setScale(1)
    button.onClick(onClick)
    table.insert(buttons, button)
end

local function updateEntityList()
    clearButtons()
    local startIdx = (currentPage - 1) * itemsPerPage + 1
    local endIdx = math.min(#trackedEntities, startIdx + itemsPerPage - 1)
    local y = 120
    for i = startIdx, endIdx do
        createButton(10, y, trackedEntities[i], {1, 1, 1}, function()
            table.remove(trackedEntities, i)
            updateEntityList()
        end)
        y = y + 20
    end
end

local function addEntity(entity)
    table.insert(trackedEntities, entity)
    updateEntityList()
end

canvas.addText({10, 0}, "Remove Entity").setColor(1, 0, 0).setScale(1.5).onClick(function()
    -- Remove selected entity
    local entity = canvas.addTextInput({10, 20}, "")
    entity.onEnter(function()
        for i, e in ipairs(trackedEntities) do
            if e == entity.getValue() then
                table.remove(trackedEntities, i)
                break
            end
        end
        updateEntityList()
    end)
end)

canvas.addText({10, 40}, "Add Entity").setColor(0, 1, 0).setScale(1.5).onClick(function()
    -- Add new entity
    local entity = canvas.addTextInput({10, 60}, "")
    entity.onEnter(function()
        addEntity(entity.getValue())
    end)
end)

canvas.addText({10, 80}, "Scroll Up").setColor(0, 0, 1).setScale(1.5).onClick(function()
    if currentPage > 1 then
        currentPage = currentPage - 1
        updateEntityList()
    end
end)

canvas.addText({10, 100}, "Scroll Down").setColor(0, 0, 1).setScale(1.5).onClick(function()
    if currentPage * itemsPerPage < #trackedEntities then
        currentPage = currentPage + 1
        updateEntityList()
    end
end)

-- Initialize entity list display
updateEntityList()

-- Function to fire laser
local function fire(entity)
    local x, y, z = entity.x, entity.y, entity.z
    local pitch = -math.atan2(y, math.sqrt(x * x + z * z))
    local yaw = math.atan2(-x, z)
    modules.fire(math.deg(yaw), math.deg(pitch), 5)
    print("Fired at entity: " .. entity.name)
end

-- Main loop to sense and fire at tracked entities
while true do
    local mobs = modules.sense()
    for i, mob in ipairs(mobs) do
        for _, entity in ipairs(trackedEntities) do
            if mob.name == entity then
                fire(mob)
            end
        end
    end
    sleep(1)
end
