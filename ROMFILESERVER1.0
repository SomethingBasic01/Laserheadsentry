local serverID = os.getComputerID()
print("Server ID:", serverID)

local serverDir = "server_files"

-- Initialize the server and create necessary directories
if not fs.exists(serverDir) then
    fs.makeDir(serverDir)
end

-- Handle upload requests
local function handleUpload(senderID, message)
    print("Handling upload request from ID:", senderID)
    local fileName, fileContent = message:match("([^,]+),(.+)")
    if not fileName or not fileContent then
        print("Error: Invalid upload message format")
        return
    end
    local filePath = fs.combine(serverDir, fileName)
    
    local file = fs.open(filePath, "w")
    if file then
        file.write(fileContent)
        file.close()
        print("Received and saved file:", fileName)
        rednet.send(senderID, "Upload successful", "upload_response")
    else
        print("Failed to save file:", fileName)
        rednet.send(senderID, "Upload failed", "upload_response")
    end
end

-- Handle download requests
local function handleDownload(senderID, fileName)
    print("Handling download request for file:", fileName)
    local filePath = fs.combine(serverDir, fileName)
    
    if fs.exists(filePath) then
        local file = fs.open(filePath, "r")
        local fileContent = file.readAll()
        file.close()
        
        rednet.send(senderID, fileContent, "file_content")
        print("Sent file:", fileName)
    else
        rednet.send(senderID, "File not found", "file_content")
        print("Requested file not found:", fileName)
    end
end

-- Handle file list requests
local function handleListFiles(senderID)
    print("Handling list files request")
    local files = fs.list(serverDir)
    local fileList = table.concat(files, ",")
    rednet.send(senderID, fileList, "file_list")
    print("Sent file list")
end

-- Handle file delete requests
local function handleDelete(senderID, fileName)
    print("Handling delete request for file:", fileName)
    local filePath = fs.combine(serverDir, fileName)
    
    if fs.exists(filePath) then
        fs.delete(filePath)
        rednet.send(senderID, "File deleted", "delete_response")
        print("Deleted file:", fileName)
    else
        rednet.send(senderID, "File not found", "delete_response")
        print("Requested file not found:", fileName)
    end
end

-- Start the server
local function startServer()
    rednet.open("right")
    print("Server initialized. Ready to receive files.")
    
    while true do
        local event, senderID, message, protocol = os.pullEvent("rednet_message")
        print("Received event:", event, "Protocol:", protocol, "From ID:", senderID)
        if protocol == "upload" then
            handleUpload(senderID, message)
        elseif protocol == "download" then
            handleDownload(senderID, message)
        elseif protocol == "list_files" then
            handleListFiles(senderID)
        elseif protocol == "delete" then
            handleDelete(senderID, message)
        else
            print("Received unknown protocol:", protocol)
        end
    end
    
    rednet.close("right")
end

startServer()
